@model Proyecto_Workspaces.Models.Reserva

@{
    ViewBag.Title = "Reservar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-6">
            <div class="card shadow-sm" style="background-color: #FFFFFF; border: 1px solid #97A3AA; border-radius: 10px;">
                <div class="card-body">
                    <h4>Reserva</h4>
                    <hr />

                    <div class="form-group">
                        @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", @type = "text", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <p></p>
                    @Html.HiddenFor(model => model.Sala.SalasId)
                    @Html.HiddenFor(model => model.Sala.Hora_Apertura)
                    @Html.HiddenFor(model => model.Sala.Hora_Clausura)

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                    <div class="form-group">
                        @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FechaReservacion, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.FechaReservacion, new { @class = "form-control", @type = "time" })
                            @Html.ValidationMessageFor(model => model.FechaReservacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FechaFinalizacion, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.FechaFinalizacion, new { @class = "form-control", @type = "time" })
                            @Html.ValidationMessageFor(model => model.FechaFinalizacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.HiddenFor(x => x.Modificada, new { Value = false })

                    @Html.HiddenFor(x => x.Estado, new { Value = 1 })

                    <br />

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Crear Reserva" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>

        </div>


    </div>

    <div class="mt-3">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        //Consigue fecha actual del sistema
        let fechaActual = new Date();
        //Le suma una semana a la fecha actual
        fechaActual.setDate(fechaActual.getDate())
        //Consigue el valor de dia, mes y año
        let mes = fechaActual.getMonth() + 1;
        let dia = fechaActual.getDate();
        let anno = fechaActual.getFullYear();
        //Si el mes o dia es menor que 10, se agrega un 0 para que se pueda agregar el minimo
        if (mes < 10)
            mes = '0' + mes.toString();
        if (dia < 10)
            dia = '0' + dia.toString();

        //Crea la fecha minima
        let fechaMin = anno + '-' + mes + '-' + dia;
        //Agrega el requisito al elemento con id 'fechaCita' (En este caso, un input)
        $('#Fecha').attr('min', fechaMin);
    </script>
}
